{
  "name": "@bielik/pdf-command",
  "version": "1.0.0",
  "description": "Extract text from PDF, DOCX, TXT and other document formats",
  "main": "main.py",
  "type": "bielik-command",
  "keywords": [
    "pdf",
    "document-reader",
    "text-extraction",
    "docx",
    "document-processing",
    "bielik-command",
    "context-provider"
  ],
  "author": "Bielik CLI",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/tom-sapletta-com/bielik.git",
    "directory": "commands/pdf"
  },
  "bugs": {
    "url": "https://github.com/tom-sapletta-com/bielik/issues"
  },
  "homepage": "https://github.com/tom-sapletta-com/bielik#readme",
  "engines": {
    "python": ">=3.8"
  },
  "scripts": {
    "test": "python -m pytest",
    "lint": "flake8 .",
    "format": "black .",
    "validate": "python -c 'import main; print(\"âœ… Module loads successfully\")'"
  },
  "bielik": {
    "category": "document",
    "command_type": "context_provider",
    "usage_format": "pdf: <file_path> [--pages=N-M] [--metadata] [--format=text|markdown]",
    "aliases": ["doc", "document"],
    "mcp_enabled": true,
    "mcp_server": "document-processor",
    "mcp_resource": "text-extraction",
    "supported_formats": [
      ".pdf",
      ".docx",
      ".doc",
      ".txt",
      ".md",
      ".rtf",
      ".odt"
    ],
    "examples": [
      {
        "command": "pdf: document.pdf",
        "description": "Extract all text from PDF document"
      },
      {
        "command": "pdf: report.pdf --pages=1-5",
        "description": "Extract text from pages 1-5 of PDF"
      },
      {
        "command": "pdf: article.docx --metadata",
        "description": "Extract text and metadata from Word document"
      },
      {
        "command": "pdf: text.txt --format=markdown",
        "description": "Read text file and format as markdown"
      }
    ],
    "help_topics": [
      "Text extraction from multiple document formats",
      "Page range selection for PDF files",
      "Metadata extraction and display",
      "Output formatting options",
      "MCP integration for enhanced processing"
    ],
    "output_format": {
      "type": "document_content",
      "contains": [
        "document_info",
        "content",
        "metadata",
        "formatted_result",
        "processing_options"
      ]
    },
    "ai_integration": {
      "provides_context": true,
      "context_types": ["document_analysis", "text_content", "file_metadata"],
      "follow_up_capable": true
    },
    "dependencies": {
      "required": [],
      "optional": [
        "pypdf>=3.0.0",
        "python-docx>=0.8.11", 
        "textract>=1.6.3"
      ]
    }
  }
}
